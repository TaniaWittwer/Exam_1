labels = c("unknown", "warm", "passive", "cruel", "neglected", "absent", "dead"))
predictor_1$iq <- factor(predictor_1$iq,
levels = c(1,2,3,4),
labels = c("min111", "101-110", "91-100", "max90"))
predictor_1$phys_neglect <- factor(predictor_1$phys_neglect,
levels = c(0,1,2),
labels = c("unknown", "absent", "present"))
predictor_1$popularity <- factor(predictor_1$popularity,
levels = c(0,1,2,3,4),
labels = c("unknown", "popular", "averagepop", "averageunpop", "unpopular"))
predictor_1$sibl_disturb <- factor(predictor_1$sibl_disturb,
levels = c(0,1,2,3),
labels = c("unknown", "none", "distrubance", "NA"))
predictor_1$socioeco_fam <- factor(predictor_1$socioeco_fam,
levels = c(1,2,3,4,5,6),
labels = c("II-NM", "III-NM", "III-M", "IV-NM", "IV-M", "V"))
predictor_1$attendance <- factor(predictor_1$attendance,
levels = c(0,1,2),
labels = c("unknown", "satisfactory", "truance_abstsm"))
#rename to avoid 'variable not found' problem
conviction <- rename(conviction, id = icpsr_seq_id_number)
#make a wide table
conviction_spread <-
spread(data = conviction, key = id, value = convicted)
#select only variable containing conviction as adult or juvenile
conviction2a <- conviction_spread[6,]
conviction2b <- conviction_spread[7,]
#make a long table and rename to avoid matching error and for clarity
conviction3a <-
gather(conviction2a, key = id, value = agecat) %>%
rename(as_adult = agecat)
conviction3b <-
gather(conviction2b, key = id, value = agecat) %>%
rename(as_juvenile = agecat)
#merge two tables
conviction_merge <- left_join(conviction3a, conviction3b, by = "id")
#create a new binary variable as convicted versus never convicted, resulting on if not convicted as adult (=1) and as juvenile(=1), then not convicted (=1), otherwise convicted (=2)
conviction_merge$convicted <- if_else(conviction_merge$as_adult == 1 & conviction_merge$as_juvenile == 1, 1, 2)
conviction_merge$convicted <- factor(conviction_merge$convicted,
levels = c(1,2),
labels = c("never", "atleastonce"))
#transform id as factor in the predictor datafile
predictor_1$id <- as.factor(predictor_1$id)
#merge
conviction_full <- left_join(predictor_1, conviction_merge, by = "id")
#transform all variable as factors
conviction_full$id <- as.numeric(conviction_full$id)
#summarise our dataset
table(conviction_full$conduct)
table(conviction_full$disc_dad)
table(conviction_full$disc_mum)
table(conviction_full$familysize)
table(conviction_full$housecare)
table(conviction_full$betw_parents)
table(conviction_full$educ_interest)
table(conviction_full$job_dad)
table(conviction_full$nervousness)
table(conviction_full$friends)
table(conviction_full$withdrawn)
table(conviction_full$attitude_dad)
table(conviction_full$iq)
table(conviction_full$phys_neglect)
table(conviction_full$popularity)
table(conviction_full$sibl_disturb)
table(conviction_full$socioeco_fam)
table(conviction_full$attendance)
#have a look to the deliquency rate
table(conviction_full$as_adult)
table(conviction_full$as_juvenile)
table(conviction_full$convicted)
ggplot(data = conviction_full, aes(y = conduct))+
geom_bar
ggplot(data = conviction_full, aes(y = conduct))+
geom_histogram()
ggplot(data = conviction_full, aes(x = conduct))+
geom_histogram()
ggplot(data = conviction_full, aes(x = conduct))+
geom_bar()
ggplot(data = conviction_full, aes(x = convicted))+
geom_bar()
ggplot(data = conviction_full, aes(x = as_adult))+
geom_bar()
ggplot(data = conviction_full, aes(x = as_juvenile))+
geom_bar()
ggplot(data = conviction_full, aes(x = as_adult))+
geom_bar()
ggplot(data = conviction_full, aes(x = as_juvenile))+
geom_bar()
#explore the predictors
pairs.panels(conviction_full)
table(conviction_full$as_adult)
table(conviction_full$as_juvenile)
table(conviction_full$convicted)
ggplot(data = conviction_full, aes(x = convicted))+
geom_bar()
ggplot(data = conviction_full, aes(x = as_adult))+
geom_bar()
ggplot(data = conviction_full, aes(x = as_juvenile))+
geom_bar()
ggplot(data = conviction_full, aes(x = convicted, y = iq, group = familysize))+
geom_bar()
ggplot(data = conviction_full, aes(x = convicted, y = iq, group = familysize))+
geom_points()
ggplot(data = conviction_full, aes(x = convicted, y = iq, group = familysize))+
geom_point()
ggplot(data = conviction_full, aes(x = convicted, y = iq, group = familysize))+
geom_hist()
ggplot(data = conviction_full, aes(x = convicted, y = iq, group = familysize))+
geom_histogram()
ggplot(data = conviction_full, aes(x = convicted, group = familysize))+
geom_histogram()
ggplot(data = conviction_full, aes(y = convicted, group = familysize))+
geom_histogram()
ggplot(data = conviction_full, aes(y = convicted, group = familysize))+
geom_bar()
ggplot(data = conviction_full, aes(x = convicted, group = familysize))+
geom_bar()
ggplot(data = conviction_full, aes(x = convicted))+
geom_bar()+
facet_wrap(~familysize)
ggplot(data = conviction_full, aes(x = convicted))+
geom_bar()+
facet_wrap(~job_dad)
table(conviction_full$convicted, conviction_full$conduct, conviction_full$disc_dad)
table(conviction_full$convicted, c(conviction_full$conduct, conviction_full$disc_dad))
table(conviction_full$convicted, conviction_full$conduct)
if (x == 1){return(freq(x/n))
} else {return(100-freq(x/n))}
freq <- function(x, n){
if (x == 1){return(freq(x/n))
} else {return(100-freq(x/n))}
}
x <- c(1,2,2,2,1)
n <- 10
freqfun <- function(x, n){
if (x == 1){return(freq(x/n))
} else {return(100-freq(x/n))}
}
freqfun(x, n)
x <- c(1,2,2,2,1)
n <- 10
freqfun <- function(x, n){
if (x == 1){return(freq(x/n))
} else {return(100-freq(x/n))}
}
freqfun(x, n)
freqfun(x, 10)
x <- c(1,2,2,2,1)
freqfun <- function(x, n){
if (x == 1){return(freq(x/n))
} else {return(100-freq(x/n))}
}
freqfun(x, 10)
freqfun(x, 10)
freqfun <- function(x, n = 10){
if (x == 1){return(freq(x/n))
} else {return(100-freq(x/n))}
}
freqfun(x, 10)
freqfun <- function(x, n = 10){
if (x == 1){return(freq(x/10))
} else {return(100-freq(x/10))}
}
freqfun(x, 10)
x <- c(1,2,2,2,1)
freqfun <- function(x){
if (x == 1){return(freq(x/10))
} else {return(100-freq(x/10))}
}
freqfun(x)
freqfun <- function(x){
if (x == 1){return(freq(x/10))
} else {return(100-freq(x/10))}
}
freqfun(x)
freqfun <- function(x){
if (x == 1){return(freq(x,10))
} else {return(100-freq(x,10))}
}
freqfun(x)
?freq
?frequency
install.packages("stats")
install.packages("stats")
library(stats)
frequency(conviction_full$conduct)
frequency(conviction_full$disc_dad)
frequency(conviction_full$disc_dad, conviction_full$convicted)
prop.table(conviction_full)
xtabs(~conduct+convicted, data = conviction_full)
xtabs(conviction ~ conduct+job_dad, data = conviction_full)
xtabs(~ conviction+conduct+job_dad, data = conviction_full)
xtabs(~conviction+conduct+job_dad, data = conviction_full)
xtabs(~conduct+job_dad, data = conviction_full)
xtabs(~conduct+job_dad+conviction, data = conviction_full)
xtabs(~conduct+conviction, data = conviction_full)
xtabs(~conduct+convicted, data = conviction_full)
xtabs(convicted~conduct+job_dad, data = conviction_full)
xtabs(~convicted+conduct+job_dad, data = conviction_full)
table(conviction_full$convicted, conviction_full$conduct)
newdata <-
conviction_full %>%
filter(conviction == 2)
newdata <-
conviction_full %>%
filter(convicted == 2)
newdata
newdata <-
conviction_full %>%
filter(convicted == 1)
newdata
newdata <-
conviction_full %>%
filter(convicted == 1)
newdata
View(newdata)
newdata <-
conviction_full %>%
filter(convicted == "atleastonce")
newdata
pairs.panel(newdata)
pairs.panels(newdata)
#explore the predictors
newdata <-
conviction_full %>%
filter(convicted == "atleastonce")
table(conviction_full$conduct)
install.packages("sjPlot")
library(sjPlot)
apply(conviction_full, 2, sjt.frq)
apply(conviction_full, 2, sjmisc::frq)
apply(newdata, 2, sjmisc::frq)
summary(as.factor(conviction_full))
apply(newdata, 2, table)
apply(conviction_full, 2, table)
prop.table(table(conviction_full),1)
?prop.table
prop.table(table(conviction_full),2)
table(conviction_full$convicted, conviction_full$conduct)
ggplot(data = conviction_full, aes(x = convicted))+
geom_bar()+
facet_wrap(~job_dad)
table(conviction_full$convicted, conviction_full$conduct)
table(conviction_full$convicted, conviction_full$disc_dad)
table(conviction_full$convicted, conviction_full$disc_mum)
table(conviction_full$convicted, conviction_full$familysize)
table(conviction_full$convicted, conviction_full$housecare)
table(conviction_full$convicted, conviction_full$betw_parents)
table(conviction_full$convicted, conviction_full$educ_interest)
table(conviction_full$convicted, conviction_full$job_dad)
table(conviction_full$convicted, conviction_full$nervousness)
table(conviction_full$convicted, conviction_full$friends)
table(conviction_full$convicted, conviction_full$withdrawn)
table(conviction_full$convicted, conviction_full$attitude_dad)
table(conviction_full$convicted, conviction_full$iq)
table(conviction_full$convicted, conviction_full$phys_neglect)
table(conviction_full$convicted, conviction_full$popularity)
table(conviction_full$convicted, conviction_full$sibl_disturb)
table(conviction_full$convicted, conviction_full$socioeco_fam)
table(conviction_full$convicted, conviction_full$attendance)
table(conviction_full$as_juvenile, conviction_full$conduct) #ok interessant
table(conviction_full$as_juvenile, conviction_full$disc_dad) #not
table(conviction_full$as_juvenile, conviction_full$disc_mum) #not
table(conviction_full$as_juvenile, conviction_full$familysize) #a voir
table(conviction_full$as_juvenile, conviction_full$housecare) #not
table(conviction_full$as_juvenile, conviction_full$betw_parents) #not
table(conviction_full$as_juvenile, conviction_full$educ_interest) #not
table(conviction_full$as_juvenile, conviction_full$job_dad) #not
table(conviction_full$as_juvenile, conviction_full$nervousness) #not
table(conviction_full$as_juvenile, conviction_full$friends) #not
table(conviction_full$as_juvenile, conviction_full$withdrawn) #not
table(conviction_full$as_juvenile, conviction_full$attitude_dad) #maybe
table(conviction_full$as_juvenile, conviction_full$iq)#ok
table(conviction_full$as_juvenile, conviction_full$phys_neglect) #nop
table(conviction_full$as_juvenile, conviction_full$popularity) #ok
table(conviction_full$as_juvenile, conviction_full$sibl_disturb) #not
table(conviction_full$as_juvenile, conviction_full$socioeco_fam) #not
table(conviction_full$as_juvenile, conviction_full$attendance) #not
table(conviction_full$as_juvenile, conviction_full$conduct) #
table(conviction_full$as_juvenile, conviction_full$disc_dad) #
table(conviction_full$as_juvenile, conviction_full$disc_mum) #
table(conviction_full$as_juvenile, conviction_full$familysize) #
table(conviction_full$as_juvenile, conviction_full$housecare) #
table(conviction_full$as_juvenile, conviction_full$betw_parents) #
table(conviction_full$as_juvenile, conviction_full$educ_interest) #
table(conviction_full$as_juvenile, conviction_full$job_dad) #
table(conviction_full$as_juvenile, conviction_full$nervousness) #
table(conviction_full$as_juvenile, conviction_full$friends) #
table(conviction_full$as_juvenile, conviction_full$withdrawn) #
table(conviction_full$as_juvenile, conviction_full$attitude_dad) #
table(conviction_full$as_juvenile, conviction_full$iq)#
table(conviction_full$as_juvenile, conviction_full$phys_neglect) #
table(conviction_full$as_juvenile, conviction_full$popularity) #
table(conviction_full$as_juvenile, conviction_full$sibl_disturb) #
table(conviction_full$as_juvenile, conviction_full$socioeco_fam) #
table(conviction_full$as_juvenile, conviction_full$attendance)
ggplot(data = conviction_full, aes(x = convicted))+
geom_bar()
table(conviction_full$as_juvenile)
ggplot(data = conviction_full, aes(x = convicted))+
geom_bar()
ggplot(data = conviction_full, aes(x = as_juvenil))+
geom_bar()
delinquency <- read_spss("Cambridge_delinquency_with_caseid.sav")
conviction <- read_spss("conviction_data.sav")
predictors_1 <-
delinquency %>%
select(v4, v53, v62, v63, v69, v83, v89, v91, v96, v104, v105, v117, v118, v119, v123, v125, v137, v138, v155)
predictor_1 <- rename(predictors_1, id = v4, conduct = v53, disc_dad = v62, disc_mum = v63, familysize = v69, housecare = v83, betw_parents = v89, educ_interest = v91, job_dad = v96, nervousness = v104, friends = v105, withdrawn = v117, attitude_dad = v118, iq = v119, phys_neglect = v123, popularity = v125, sibl_disturb = v137, socioeco_fam = v138, attendance = v155)
#Give labels to variables for clarity
predictor_1$conduct <- factor(predictor_1$conduct,
levels = c(0,1,2,3),
labels = c("unknown", "well", "moderatebad", "verybadly"))
predictor_1$disc_dad <- factor(predictor_1$disc_dad,
levels = c(0,1,2,3,4,5),
labels = c("unknown", "not", "spoilt", "harsh", "disinterest", "NA"))
predictor_1$disc_mum <- factor(predictor_1$disc_mum,
levels = c(0,1,2,3,4,5),
labels = c("unknown", "not", "spoilt", "harsh", "disinterest", "NA"))
predictor_1$familysize <- factor(predictor_1$familysize,
levels = c(1,2,3,4,5,6),
labels = c("none", "one", "two", "three", "four", "five_more"))
predictor_1$housecare <- factor(predictor_1$housecare,
levels = c(0,1,2),
labels = c("unknown", "satisfactory", "veryneglected"))
predictor_1$betw_parents <- factor(predictor_1$betw_parents,
levels = c(0,1,2,3),
labels = c("unknown", "consistency", "inconsistency", "NA"))
predictor_1$educ_interest <- factor(predictor_1$educ_interest,
levels = c(0,1,2,3),
labels = c("unknown", "veryinterested", "average", "notinterested"))
predictor_1$job_dad <- factor(predictor_1$job_dad,
levels = c(0,1,2,3,4),
labels = c("unknown", "alwstable", "nowstable", "erractic", "NA"))
predictor_1$nervousness <- factor(predictor_1$nervousness,
levels = c(0,1,2,3,4),
labels = c("unknown", "not", "minimal", "moderate", "severe"))
predictor_1$friends <- factor(predictor_1$friends,
levels = c(0,1,2,3),
labels = c("unknown", "many", "average", "fewornot"))
predictor_1$withdrawn <- factor(predictor_1$withdrawn,
levels = c(0,1,2,3),
labels = c("unknown", "atease", "normal", "shyorwithdrawn"))
predictor_1$attitude_dad <- factor(predictor_1$attitude_dad,
levels = c(0,1,2,3,4,5,6),
labels = c("unknown", "warm", "passive", "cruel", "neglected", "absent", "dead"))
predictor_1$iq <- factor(predictor_1$iq,
levels = c(1,2,3,4),
labels = c("min111", "101-110", "91-100", "max90"))
predictor_1$phys_neglect <- factor(predictor_1$phys_neglect,
levels = c(0,1,2),
labels = c("unknown", "absent", "present"))
predictor_1$popularity <- factor(predictor_1$popularity,
levels = c(0,1,2,3,4),
labels = c("unknown", "popular", "averagepop", "averageunpop", "unpopular"))
predictor_1$sibl_disturb <- factor(predictor_1$sibl_disturb,
levels = c(0,1,2,3),
labels = c("unknown", "none", "distrubance", "NA"))
predictor_1$socioeco_fam <- factor(predictor_1$socioeco_fam,
levels = c(1,2,3,4,5,6),
labels = c("II-NM", "III-NM", "III-M", "IV-NM", "IV-M", "V"))
predictor_1$attendance <- factor(predictor_1$attendance,
levels = c(0,1,2),
labels = c("unknown", "satisfactory", "truance_abstsm"))
#rename to avoid 'variable not found' problem
conviction <- rename(conviction, id = icpsr_seq_id_number)
#make a wide table
conviction_spread <-
spread(data = conviction, key = id, value = convicted)
#select only variable containing conviction as adult or juvenile
conviction2a <- conviction_spread[6,]
conviction2b <- conviction_spread[7,]
#make a long table and rename to avoid matching error and for clarity
conviction3a <-
gather(conviction2a, key = id, value = agecat) %>%
rename(as_adult = agecat)
conviction3b <-
gather(conviction2b, key = id, value = agecat) %>%
rename(as_juvenile = agecat)
#merge two tables
conviction_merge <- left_join(conviction3a, conviction3b, by = "id")
#create a new binary variable as convicted versus never convicted, resulting on if not convicted as adult (=1) and as juvenile(=1), then not convicted (=1), otherwise convicted (=2)
conviction_merge$convicted <- if_else(conviction_merge$as_adult == 1 & conviction_merge$as_juvenile == 1, 1, 2)
conviction_merge$convicted <- factor(conviction_merge$convicted,
levels = c(1,2),
labels = c("never", "atleastonce"))
#transform id as factor in the predictor datafile
predictor_1$id <- as.factor(predictor_1$id)
#merge
conviction_full <- left_join(predictor_1, conviction_merge, by = "id")
#transform all variable as factors
conviction_full$id <- as.numeric(conviction_full$id)
table(conviction_full$as_juvenile)
ggplot(data = conviction_full, aes(x = as_juvenil))+
geom_bar()
ggplot(data = conviction_full, aes(x = as_juvenile))+
geom_bar()
#have a look to the deliquency rate
table(conviction_full$as_juvenile)
#have a look to the deliquency rate
table(conviction_full$as_juvenile)
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = convicted))+
geom_bar()+
facet_wrap(~disc_dad)
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_bar()+
facet_wrap(~juvenile)
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_bar()+
facet_wrap(~as_juvenile)
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_histogram()+
facet_wrap(~as_juvenile)
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(y = disc_dad))+
geom_histogram()+
facet_wrap(~as_juvenile)
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_bar()+
facet_wrap(~as_juvenile)
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_boxplot()+
facet_wrap(~as_juvenile)
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_histogram()+
facet_wrap(~as_juvenile)
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_smooth()+
facet_wrap(~as_juvenile)
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_bar()+
facet_wrap(~as_juvenile)
prop.table(conviction_full$as_juvenile, conviction_full$disc_dad) #a voir
prop.table(conviction_full$disc_dad) #a voir
hist(disc_dad)
hist(conviction_full$disc_dad)
facet_wrap(~as_juvenile)
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_bar(aes(x = (..count..)/sum(..count..))+
facet_wrap(~as_juvenile)
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_bar(aes(x = (..count..)/sum(..count..)))+
facet_wrap(~as_juvenile)
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_bar(aes(x = (..count..)/sum(..count..)))
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_bar(aes(y = (..count..)/sum(..count..)))
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_bar(aes(y = ..prop..))
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_bar(aes(y = ..prop.., group = 2))
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = disc_dad))+
geom_bar(aes(y = ..prop.., group = 2))+
facet_wrap(~as_juvenile)
ggplot(data = conviction_full, aes(x = disc_mum))+
geom_bar(aes(y = ..prop.., group = 2))+
facet_wrap(~as_juvenile)
ggplot(data = conviction_full, aes(x = familysize))+
geom_bar(aes(y = ..prop.., group = 2))+
facet_wrap(~as_juvenile)
ggplot(data = conviction_full, aes(x = as_juvenile))+
geom_bar(aes(y = ..prop.., group = 2))+
facet_wrap(~familysize)
ggplot(data = conviction_full, aes(x = as_juvenile))+
geom_bar(aes(y = ..prop.., group = 2))+
facet_wrap(~disc_mum)
#all variables have been explored, however only the most relevant (the one which will be included in the prediction model) will appear here
ggplot(data = conviction_full, aes(x = as_juvenile))+
geom_bar(aes(y = ..prop.., group = 2))+
facet_wrap(~disc_dad)
ggplot(data = conviction_full, aes(x = as_juvenile))+
geom_bar(aes(y = ..prop.., group = 2))+
facet_wrap(~job_dad)
#create the final dataset for the predictor model
final_delinquency <-
conviction_full %>%
select(as_juvenile, disc_dad, disc_mum, familysize, job_dad, friends, withdrawn, attitude_dad, iq, popularity, attendance)
ggplot(data = conviction_full, aes(x = as_juvenile))+
geom_bar(aes(y = ..prop.., group = 2))+
facet_wrap(~iq)
#explore the potentiel correlations (to deduce potentuel interactions)
pairs.panels(final_delinquency)
#explore the potentiel correlations (to deduce potentuel interactions)
pairs.panels(final_delinquency, stars = TRUE)
#set seed and split for the model
set.seed(23)
delinquency_train <- sample_frac(final_delinquency, 0.50)
delinquency_test <- setdiff(final_delinquency, delinquency_train)
delinquency_test <- setdiff(final_delinquency - delinquency_train)
delinquency_test <- setdiff(final_delinquency, delinquency_train)
delinquency_test <- setdiff(delinquency_train, final_delinquency)
delinquency_test <- setdiff(final_delinquency, delinquency_train)
delinquency_train <- sample_frac(final_delinquency, 0.75)
delinquency_test <- setdiff(final_delinquency, delinquency_train)
delinquency_train <- sample_frac(final_delinquency, 0.50)
delinquency_test <- setdiff(final_delinquency, delinquency_train)
